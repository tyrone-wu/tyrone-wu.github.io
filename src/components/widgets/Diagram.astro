---
import type { ImageMetadata } from "astro";

interface DiagramVersion {
  version: string;
  diagram: ImageMetadata;
}

const versions = ["0.2.0", "0.1.0", "0.0.3", "0.0.2", "0.0.1"];

const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/homelab/diagrams/*.png",
);
const diagrams: DiagramVersion[] = await Promise.all(
  versions.map(async (version): Promise<DiagramVersion> => {
    const diagram = (
      await images[`/src/assets/homelab/diagrams/diagram-v${version}.png`]()
    ).default;
    return {
      version: version,
      diagram: diagram,
    };
  }),
);
---

<div>
  <span class="font-semibold">Diagram version:</span>
  <select id="diagram-dropdown" class="bg-color">
    {
      diagrams.map((version, index) => (
        <option value={index} selected={index === 0}>
          {version.version}
        </option>
      ))
    }
  </select>

  <img
    id="diagram-image"
    class="size-fit"
    src={diagrams[0].diagram.src}
    alt="homelab-diagram"
    width={diagrams[0].diagram.width}
    height={diagrams[0].diagram.height}
    decoding="async"
    loading="lazy"
  />
</div>

<script is:inline define:vars={{ diagrams }}>
  const dropdown = document.getElementById("diagram-dropdown");
  const image = document.getElementById("diagram-image");

  dropdown.addEventListener("change", (event) => {
    const index = parseInt(event.target.value);
    const diagram = diagrams[index].diagram;
    image.src = diagram.src;
    image.width = diagram.width;
    image.height = diagram.height;
  });
</script>
